(self.webpackChunkpolkadot_js=self.webpackChunkpolkadot_js||[]).push([[4145],{628:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return l},metadata:function(){return o},toc:function(){return s},default:function(){return d}});var n=a(2122),i=a(9756),r=(a(7294),a(3905)),l={title:"JSON-RPC"},o={unversionedId:"substrate/rpc",id:"substrate/rpc",isDocsHomePage:!1,title:"JSON-RPC",description:"The following sections contain RPC methods that are Remote Calls available by default and allow you to interact with the actual node, query, and submit.",source:"@site/docs/substrate/rpc.md",sourceDirName:"substrate",slug:"/substrate/rpc",permalink:"/docs/substrate/rpc",editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/substrate/rpc.md",version:"current",frontMatter:{title:"JSON-RPC"},sidebar:"reference",previous:{title:"Overview",permalink:"/docs/substrate"},next:{title:"Constants",permalink:"/docs/substrate/constants"}},s=[{value:"author",id:"author",children:[{value:"hasKey(publicKey: <code>Bytes</code>, keyType: <code>Text</code>): <code>bool</code>",id:"haskeypublickey-bytes-keytype-text-bool",children:[]},{value:"hasSessionKeys(sessionKeys: <code>Bytes</code>): <code>bool</code>",id:"hassessionkeyssessionkeys-bytes-bool",children:[]},{value:"insertKey(keyType: <code>Text</code>, suri: <code>Text</code>, publicKey: <code>Bytes</code>): <code>Bytes</code>",id:"insertkeykeytype-text-suri-text-publickey-bytes-bytes",children:[]},{value:"pendingExtrinsics(): <code>Vec&lt;Extrinsic&gt;</code>",id:"pendingextrinsics-vecextrinsic",children:[]},{value:"removeExtrinsic(bytesOrHash: <code>Vec&lt;ExtrinsicOrHash&gt;</code>): <code>Vec&lt;Hash&gt;</code>",id:"removeextrinsicbytesorhash-vecextrinsicorhash-vechash",children:[]},{value:"rotateKeys(): <code>Bytes</code>",id:"rotatekeys-bytes",children:[]},{value:"submitAndWatchExtrinsic(extrinsic: <code>Extrinsic</code>): <code>ExtrinsicStatus</code>",id:"submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus",children:[]},{value:"submitExtrinsic(extrinsic: <code>Extrinsic</code>): <code>Hash</code>",id:"submitextrinsicextrinsic-extrinsic-hash",children:[]}]},{value:"babe",id:"babe",children:[{value:"epochAuthorship(): <code>HashMap&lt;AuthorityId, EpochAuthorship&gt;</code>",id:"epochauthorship-hashmapauthorityid-epochauthorship",children:[]}]},{value:"beefy",id:"beefy",children:[{value:"subscribeJustifications(): <code>BeefySignedCommitment</code>",id:"subscribejustifications-beefysignedcommitment",children:[]}]},{value:"chain",id:"chain",children:[{value:"getBlock(hash?: <code>BlockHash</code>): <code>SignedBlock</code>",id:"getblockhash-blockhash-signedblock",children:[]},{value:"getBlockHash(blockNumber?: <code>BlockNumber</code>): <code>BlockHash</code>",id:"getblockhashblocknumber-blocknumber-blockhash",children:[]},{value:"getFinalizedHead(): <code>BlockHash</code>",id:"getfinalizedhead-blockhash",children:[]},{value:"getHeader(hash?: <code>BlockHash</code>): <code>Header</code>",id:"getheaderhash-blockhash-header",children:[]},{value:"subscribeAllHeads(): <code>Header</code>",id:"subscribeallheads-header",children:[]},{value:"subscribeFinalizedHeads(): <code>Header</code>",id:"subscribefinalizedheads-header",children:[]},{value:"subscribeNewHeads(): <code>Header</code>",id:"subscribenewheads-header",children:[]}]},{value:"childstate",id:"childstate",children:[{value:"getKeys(childKey: <code>PrefixedStorageKey</code>, prefix: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Vec&lt;StorageKey&gt;</code>",id:"getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey",children:[]},{value:"getStorage(childKey: <code>PrefixedStorageKey</code>, key: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Option&lt;StorageData&gt;</code>",id:"getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata",children:[]},{value:"getStorageHash(childKey: <code>PrefixedStorageKey</code>, key: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Option&lt;Hash&gt;</code>",id:"getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash",children:[]},{value:"getStorageSize(childKey: <code>PrefixedStorageKey</code>, key: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Option&lt;u64&gt;</code>",id:"getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64",children:[]}]},{value:"contracts",id:"contracts",children:[{value:"call(callRequest: <code>ContractCallRequest</code>, at?: <code>BlockHash</code>): <code>ContractExecResult</code>",id:"callcallrequest-contractcallrequest-at-blockhash-contractexecresult",children:[]},{value:"getStorage(address: <code>AccountId</code>, key: <code>H256</code>, at?: <code>BlockHash</code>): <code>Option&lt;Bytes&gt;</code>",id:"getstorageaddress-accountid-key-h256-at-blockhash-optionbytes",children:[]},{value:"instantiate(request: <code>InstantiateRequest</code>, at?: <code>BlockHash</code>): <code>ContractInstantiateResult</code>",id:"instantiaterequest-instantiaterequest-at-blockhash-contractinstantiateresult",children:[]},{value:"rentProjection(address: <code>AccountId</code>, at?: <code>BlockHash</code>): <code>Option&lt;BlockNumber&gt;</code>",id:"rentprojectionaddress-accountid-at-blockhash-optionblocknumber",children:[]}]},{value:"engine",id:"engine",children:[{value:"createBlock(createEmpty: <code>bool</code>, finalize: <code>bool</code>, parentHash?: <code>BlockHash</code>): <code>CreatedBlock</code>",id:"createblockcreateempty-bool-finalize-bool-parenthash-blockhash-createdblock",children:[]},{value:"finalizeBlock(hash: <code>BlockHash</code>, justification?: <code>Justification</code>): <code>bool</code>",id:"finalizeblockhash-blockhash-justification-justification-bool",children:[]}]},{value:"eth",id:"eth",children:[{value:"accounts(): <code>Vec&lt;H160&gt;</code>",id:"accounts-vech160",children:[]},{value:"blockNumber(): <code>U256</code>",id:"blocknumber-u256",children:[]},{value:"call(request: <code>EthCallRequest</code>, number?: <code>BlockNumber</code>): <code>Bytes</code>",id:"callrequest-ethcallrequest-number-blocknumber-bytes",children:[]},{value:"chainId(): <code>U64</code>",id:"chainid-u64",children:[]},{value:"coinbase(): <code>H160</code>",id:"coinbase-h160",children:[]},{value:"estimateGas(request: <code>EthCallRequest</code>, number?: <code>BlockNumber</code>): <code>U256</code>",id:"estimategasrequest-ethcallrequest-number-blocknumber-u256",children:[]},{value:"gasPrice(): <code>U256</code>",id:"gasprice-u256",children:[]},{value:"getBalance(address: <code>H160</code>, number?: <code>BlockNumber</code>): <code>U256</code>",id:"getbalanceaddress-h160-number-blocknumber-u256",children:[]},{value:"getBlockByHash(hash: <code>H256</code>, full: <code>bool</code>): <code>Option&lt;EthRichBlock&gt;</code>",id:"getblockbyhashhash-h256-full-bool-optionethrichblock",children:[]},{value:"getBlockByNumber(block: <code>BlockNumber</code>, full: <code>bool</code>): <code>Option&lt;EthRichBlock&gt;</code>",id:"getblockbynumberblock-blocknumber-full-bool-optionethrichblock",children:[]},{value:"getBlockTransactionCountByHash(hash: <code>H256</code>): <code>U256</code>",id:"getblocktransactioncountbyhashhash-h256-u256",children:[]},{value:"getBlockTransactionCountByNumber(block: <code>BlockNumber</code>): <code>U256</code>",id:"getblocktransactioncountbynumberblock-blocknumber-u256",children:[]},{value:"getCode(address: <code>H160</code>, number?: <code>BlockNumber</code>): <code>Bytes</code>",id:"getcodeaddress-h160-number-blocknumber-bytes",children:[]},{value:"getFilterChanges(index: <code>U256</code>): <code>EthFilterChanges</code>",id:"getfilterchangesindex-u256-ethfilterchanges",children:[]},{value:"getFilterLogs(index: <code>U256</code>): <code>Vec&lt;EthLog&gt;</code>",id:"getfilterlogsindex-u256-vecethlog",children:[]},{value:"getLogs(filter: <code>EthFilter</code>): <code>Vec&lt;EthLog&gt;</code>",id:"getlogsfilter-ethfilter-vecethlog",children:[]},{value:"getProof(address: <code>H160</code>, storageKeys: <code>Vec&lt;H256&gt;</code>, number: <code>BlockNumber</code>): <code>EthAccount</code>",id:"getproofaddress-h160-storagekeys-vech256-number-blocknumber-ethaccount",children:[]},{value:"getStorageAt(address: <code>H160</code>, index: <code>U256</code>, number?: <code>BlockNumber</code>): <code>H256</code>",id:"getstorageataddress-h160-index-u256-number-blocknumber-h256",children:[]},{value:"getTransactionByBlockHashAndIndex(hash: <code>H256</code>, index: <code>U256</code>): <code>EthTransaction</code>",id:"gettransactionbyblockhashandindexhash-h256-index-u256-ethtransaction",children:[]},{value:"getTransactionByBlockNumberAndIndex(number: <code>BlockNumber</code>, index: <code>U256</code>): <code>EthTransaction</code>",id:"gettransactionbyblocknumberandindexnumber-blocknumber-index-u256-ethtransaction",children:[]},{value:"getTransactionByHash(hash: <code>H256</code>): <code>EthTransaction</code>",id:"gettransactionbyhashhash-h256-ethtransaction",children:[]},{value:"getTransactionCount(hash: <code>H256</code>, number?: <code>BlockNumber</code>): <code>U256</code>",id:"gettransactioncounthash-h256-number-blocknumber-u256",children:[]},{value:"getTransactionReceipt(hash: <code>H256</code>): <code>EthReceipt</code>",id:"gettransactionreceipthash-h256-ethreceipt",children:[]},{value:"getUncleByBlockHashAndIndex(hash: <code>H256</code>, index: <code>U256</code>): <code>EthRichBlock</code>",id:"getunclebyblockhashandindexhash-h256-index-u256-ethrichblock",children:[]},{value:"getUncleByBlockNumberAndIndex(number: <code>BlockNumber</code>, index: <code>U256</code>): <code>EthRichBlock</code>",id:"getunclebyblocknumberandindexnumber-blocknumber-index-u256-ethrichblock",children:[]},{value:"getUncleCountByBlockHash(hash: <code>H256</code>): <code>U256</code>",id:"getunclecountbyblockhashhash-h256-u256",children:[]},{value:"getUncleCountByBlockNumber(number: <code>BlockNumber</code>): <code>U256</code>",id:"getunclecountbyblocknumbernumber-blocknumber-u256",children:[]},{value:"getWork(): <code>EthWork</code>",id:"getwork-ethwork",children:[]},{value:"hashrate(): <code>U256</code>",id:"hashrate-u256",children:[]},{value:"mining(): <code>bool</code>",id:"mining-bool",children:[]},{value:"newBlockFilter(): <code>U256</code>",id:"newblockfilter-u256",children:[]},{value:"newFilter(filter: <code>EthFilter</code>): <code>U256</code>",id:"newfilterfilter-ethfilter-u256",children:[]},{value:"newPendingTransactionFilter(): <code>U256</code>",id:"newpendingtransactionfilter-u256",children:[]},{value:"protocolVersion(): <code>u64</code>",id:"protocolversion-u64",children:[]},{value:"sendRawTransaction(bytes: <code>Bytes</code>): <code>H256</code>",id:"sendrawtransactionbytes-bytes-h256",children:[]},{value:"sendTransaction(tx: <code>EthTransactionRequest</code>): <code>H256</code>",id:"sendtransactiontx-ethtransactionrequest-h256",children:[]},{value:"submitHashrate(index: <code>U256</code>, hash: <code>H256</code>): <code>bool</code>",id:"submithashrateindex-u256-hash-h256-bool",children:[]},{value:"submitWork(nonce: <code>H64</code>, headerHash: <code>H256</code>, mixDigest: <code>H256</code>): <code>bool</code>",id:"submitworknonce-h64-headerhash-h256-mixdigest-h256-bool",children:[]},{value:"subscribe(kind: <code>EthSubKind</code>, params?: <code>EthSubParams</code>): <code>Null</code>",id:"subscribekind-ethsubkind-params-ethsubparams-null",children:[]},{value:"syncing(): <code>EthSyncStatus</code>",id:"syncing-ethsyncstatus",children:[]},{value:"uninstallFilter(index: <code>U256</code>): <code>bool</code>",id:"uninstallfilterindex-u256-bool",children:[]}]},{value:"eth/net",id:"ethnet",children:[{value:"listening(): <code>bool</code>",id:"listening-bool",children:[]},{value:"peerCount(): <code>String</code>",id:"peercount-string",children:[]},{value:"version(): <code>String</code>",id:"version-string",children:[]}]},{value:"eth/web3",id:"ethweb3",children:[{value:"clientVersion(): <code>String</code>",id:"clientversion-string",children:[]},{value:"sha3(data: <code>Bytes</code>): <code>H256</code>",id:"sha3data-bytes-h256",children:[]}]},{value:"grandpa",id:"grandpa",children:[{value:"proveFinality(begin: <code>BlockHash</code>, end: <code>BlockHash</code>, authoritiesSetId?: <code>u64</code>): <code>Option&lt;EncodedFinalityProofs&gt;</code>",id:"provefinalitybegin-blockhash-end-blockhash-authoritiessetid-u64-optionencodedfinalityproofs",children:[]},{value:"roundState(): <code>ReportedRoundStates</code>",id:"roundstate-reportedroundstates",children:[]},{value:"subscribeJustifications(): <code>JustificationNotification</code>",id:"subscribejustifications-justificationnotification",children:[]}]},{value:"mmr",id:"mmr",children:[{value:"generateProof(leafIndex: <code>u64</code>, at?: <code>BlockHash</code>): <code>MmrLeafProof</code>",id:"generateproofleafindex-u64-at-blockhash-mmrleafproof",children:[]}]},{value:"offchain",id:"offchain",children:[{value:"localStorageGet(kind: <code>StorageKind</code>, key: <code>Bytes</code>): <code>Option&lt;Bytes&gt;</code>",id:"localstoragegetkind-storagekind-key-bytes-optionbytes",children:[]},{value:"localStorageSet(kind: <code>StorageKind</code>, key: <code>Bytes</code>, value: <code>Bytes</code>): <code>Null</code>",id:"localstoragesetkind-storagekind-key-bytes-value-bytes-null",children:[]}]},{value:"payment",id:"payment",children:[{value:"queryFeeDetails(extrinsic: <code>Bytes</code>, at?: <code>BlockHash</code>): <code>FeeDetails</code>",id:"queryfeedetailsextrinsic-bytes-at-blockhash-feedetails",children:[]},{value:"queryInfo(extrinsic: <code>Bytes</code>, at?: <code>BlockHash</code>): <code>RuntimeDispatchInfo</code>",id:"queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfo",children:[]}]},{value:"rpc",id:"rpc",children:[{value:"methods(): <code>RpcMethods</code>",id:"methods-rpcmethods",children:[]}]},{value:"state",id:"state",children:[{value:"call(method: <code>Text</code>, data: <code>Bytes</code>, at?: <code>BlockHash</code>): <code>Bytes</code>",id:"callmethod-text-data-bytes-at-blockhash-bytes",children:[]},{value:"getChildKeys(childStorageKey: <code>StorageKey</code>, childDefinition: <code>StorageKey</code>, childType: <code>u32</code>, key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Vec&lt;StorageKey&gt;</code>",id:"getchildkeyschildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-vecstoragekey",children:[]},{value:"getChildStorage(childStorageKey: <code>StorageKey</code>, childDefinition: <code>StorageKey</code>, childType: <code>u32</code>, key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>StorageData</code>",id:"getchildstoragechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-storagedata",children:[]},{value:"getChildStorageHash(childStorageKey: <code>StorageKey</code>, childDefinition: <code>StorageKey</code>, childType: <code>u32</code>, key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Hash</code>",id:"getchildstoragehashchildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-hash",children:[]},{value:"getChildStorageSize(childStorageKey: <code>StorageKey</code>, childDefinition: <code>StorageKey</code>, childType: <code>u32</code>, key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>u64</code>",id:"getchildstoragesizechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-u64",children:[]},{value:"getKeys(key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Vec&lt;StorageKey&gt;</code>",id:"getkeyskey-storagekey-at-blockhash-vecstoragekey",children:[]},{value:"getKeysPaged(key: <code>StorageKey</code>, count: <code>u32</code>, startKey?: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Vec&lt;StorageKey&gt;</code>",id:"getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey",children:[]},{value:"getMetadata(at?: <code>BlockHash</code>): <code>Metadata</code>",id:"getmetadataat-blockhash-metadata",children:[]},{value:"getPairs(prefix: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Vec&lt;KeyValue&gt;</code>",id:"getpairsprefix-storagekey-at-blockhash-veckeyvalue",children:[]},{value:"getReadProof(keys: <code>Vec&lt;StorageKey&gt;</code>, at?: <code>BlockHash</code>): <code>ReadProof</code>",id:"getreadproofkeys-vecstoragekey-at-blockhash-readproof",children:[]},{value:"getRuntimeVersion(at?: <code>BlockHash</code>): <code>RuntimeVersion</code>",id:"getruntimeversionat-blockhash-runtimeversion",children:[]},{value:"getStorage(key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>StorageData</code>",id:"getstoragekey-storagekey-at-blockhash-storagedata",children:[]},{value:"getStorageHash(key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Hash</code>",id:"getstoragehashkey-storagekey-at-blockhash-hash",children:[]},{value:"getStorageSize(key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>u64</code>",id:"getstoragesizekey-storagekey-at-blockhash-u64",children:[]},{value:"queryStorage(keys: <code>Vec&lt;StorageKey&gt;</code>, fromBlock: <code>Hash</code>, toBlock?: <code>BlockHash</code>): <code>Vec&lt;StorageChangeSet&gt;</code>",id:"querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset",children:[]},{value:"queryStorageAt(keys: <code>Vec&lt;StorageKey&gt;</code>, at?: <code>BlockHash</code>): <code>Vec&lt;StorageChangeSet&gt;</code>",id:"querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset",children:[]},{value:"subscribeRuntimeVersion(): <code>RuntimeVersion</code>",id:"subscriberuntimeversion-runtimeversion",children:[]},{value:"subscribeStorage(keys?: <code>Vec&lt;StorageKey&gt;</code>): <code>StorageChangeSet</code>",id:"subscribestoragekeys-vecstoragekey-storagechangeset",children:[]},{value:"traceBlock(block: <code>Hash</code>, targets: <code>Option&lt;Text&gt;</code>, storageKeys: <code>Option&lt;Text&gt;</code>): <code>TraceBlockResponse</code>",id:"traceblockblock-hash-targets-optiontext-storagekeys-optiontext-traceblockresponse",children:[]}]},{value:"syncstate",id:"syncstate",children:[{value:"genSyncSpec(raw: <code>bool</code>): <code>Json</code>",id:"gensyncspecraw-bool-json",children:[]}]},{value:"system",id:"system",children:[{value:"accountNextIndex(accountId: <code>AccountId</code>): <code>Index</code>",id:"accountnextindexaccountid-accountid-index",children:[]},{value:"addLogFilter(directives: <code>Text</code>): <code>Null</code>",id:"addlogfilterdirectives-text-null",children:[]},{value:"addReservedPeer(peer: <code>Text</code>): <code>Text</code>",id:"addreservedpeerpeer-text-text",children:[]},{value:"chain(): <code>Text</code>",id:"chain-text",children:[]},{value:"chainType(): <code>ChainType</code>",id:"chaintype-chaintype",children:[]},{value:"dryRun(extrinsic: <code>Bytes</code>, at?: <code>BlockHash</code>): <code>ApplyExtrinsicResult</code>",id:"dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult",children:[]},{value:"health(): <code>Health</code>",id:"health-health",children:[]},{value:"localListenAddresses(): <code>Vec&lt;Text&gt;</code>",id:"locallistenaddresses-vectext",children:[]},{value:"localPeerId(): <code>Text</code>",id:"localpeerid-text",children:[]},{value:"name(): <code>Text</code>",id:"name-text",children:[]},{value:"networkState(): <code>NetworkState</code>",id:"networkstate-networkstate",children:[]},{value:"nodeRoles(): <code>Vec&lt;NodeRole&gt;</code>",id:"noderoles-vecnoderole",children:[]},{value:"peers(): <code>Vec&lt;PeerInfo&gt;</code>",id:"peers-vecpeerinfo",children:[]},{value:"properties(): <code>ChainProperties</code>",id:"properties-chainproperties",children:[]},{value:"removeReservedPeer(peerId: <code>Text</code>): <code>Text</code>",id:"removereservedpeerpeerid-text-text",children:[]},{value:"reservedPeers(): <code>Vec&lt;Text&gt;</code>",id:"reservedpeers-vectext",children:[]},{value:"resetLogFilter(): <code>Null</code>",id:"resetlogfilter-null",children:[]},{value:"syncState(): <code>SyncState</code>",id:"syncstate-syncstate",children:[]},{value:"version(): <code>Text</code>",id:"version-text",children:[]}]}],c={toc:s};function d(e){var t=e.components,a=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The following sections contain RPC methods that are Remote Calls available by default and allow you to interact with the actual node, query, and submit."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#author"},"author")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#babe"},"babe")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#beefy"},"beefy")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#chain"},"chain")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#childstate"},"childstate")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#contracts"},"contracts")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#engine"},"engine")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#eth"},"eth")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#eth/net"},"eth/net")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#eth/web3"},"eth/web3")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#grandpa"},"grandpa")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#mmr"},"mmr")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#offchain"},"offchain")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#payment"},"payment")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#rpc"},"rpc")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#state"},"state")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#syncstate"},"syncstate")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#system"},"system"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"author"},"author"),(0,r.kt)("h3",{id:"haskeypublickey-bytes-keytype-text-bool"},"hasKey(publicKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", keyType: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.hasKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_hasKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns true if the keystore has private keys for the given public key and key type.")),(0,r.kt)("h3",{id:"hassessionkeyssessionkeys-bytes-bool"},"hasSessionKeys(sessionKeys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.hasSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_hasSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns true if the keystore has private keys for the given session public keys.")),(0,r.kt)("h3",{id:"insertkeykeytype-text-suri-text-publickey-bytes-bytes"},"insertKey(keyType: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),", suri: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),", publicKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.insertKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_insertKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Insert a key into the keystore.")),(0,r.kt)("h3",{id:"pendingextrinsics-vecextrinsic"},"pendingExtrinsics(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Extrinsic>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.pendingExtrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_pendingExtrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns all pending extrinsics, potentially grouped by sender")),(0,r.kt)("h3",{id:"removeextrinsicbytesorhash-vecextrinsicorhash-vechash"},"removeExtrinsic(bytesOrHash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<ExtrinsicOrHash>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Hash>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.removeExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_removeExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Remove given extrinsic from the pool and temporarily ban it to prevent reimporting")),(0,r.kt)("h3",{id:"rotatekeys-bytes"},"rotateKeys(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.rotateKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_rotateKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate new session keys and returns the corresponding public keys")),(0,r.kt)("h3",{id:"submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus"},"submitAndWatchExtrinsic(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ExtrinsicStatus")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.submitAndWatchExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_submitAndWatchExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submit and subscribe to watch an extrinsic until unsubscribed")),(0,r.kt)("h3",{id:"submitextrinsicextrinsic-extrinsic-hash"},"submitExtrinsic(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.submitExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_submitExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submit a fully formatted extrinsic for block inclusion")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"babe"},"babe"),(0,r.kt)("h3",{id:"epochauthorship-hashmapauthorityid-epochauthorship"},"epochAuthorship(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"HashMap<AuthorityId, EpochAuthorship>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.babe.epochAuthorship")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"babe_epochAuthorship")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"beefy"},"beefy"),(0,r.kt)("h3",{id:"subscribejustifications-beefysignedcommitment"},"subscribeJustifications(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BeefySignedCommitment")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.beefy.subscribeJustifications")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"beefy_subscribeJustifications")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the block most recently finalized by BEEFY, alongside side its justification.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"chain"},"chain"),(0,r.kt)("h3",{id:"getblockhash-blockhash-signedblock"},"getBlock(hash?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SignedBlock")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.getBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_getBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get header and body of a relay chain block")),(0,r.kt)("h3",{id:"getblockhashblocknumber-blocknumber-blockhash"},"getBlockHash(blockNumber?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.getBlockHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_getBlockHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the block hash for a specific block")),(0,r.kt)("h3",{id:"getfinalizedhead-blockhash"},"getFinalizedHead(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.getFinalizedHead")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_getFinalizedHead")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get hash of the last finalized block in the canon chain")),(0,r.kt)("h3",{id:"getheaderhash-blockhash-header"},"getHeader(hash?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.getHeader")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_getHeader")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the header for a specific block")),(0,r.kt)("h3",{id:"subscribeallheads-header"},"subscribeAllHeads(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.subscribeAllHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_subscribeAllHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the newest header via subscription")),(0,r.kt)("h3",{id:"subscribefinalizedheads-header"},"subscribeFinalizedHeads(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.subscribeFinalizedHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_subscribeFinalizedHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the best finalized header via subscription")),(0,r.kt)("h3",{id:"subscribenewheads-header"},"subscribeNewHeads(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.subscribeNewHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_subscribeNewHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the best header via subscription")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"childstate"},"childstate"),(0,r.kt)("h3",{id:"getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey"},"getKeys(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", prefix: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the keys with prefix from a child storage, leave empty to get all the keys")),(0,r.kt)("h3",{id:"getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata"},"getStorage(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<StorageData>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns a child storage entry at a specific block state")),(0,r.kt)("h3",{id:"getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash"},"getStorageHash(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Hash>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the hash of a child storage entry at a block state")),(0,r.kt)("h3",{id:"getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64"},"getStorageSize(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<u64>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the size of a child storage entry at a block state")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"contracts"},"contracts"),(0,r.kt)("h3",{id:"callcallrequest-contractcallrequest-at-blockhash-contractexecresult"},"call(callRequest: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ContractCallRequest"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ContractExecResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.contracts.call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"contracts_call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Executes a call to a contract")),(0,r.kt)("h3",{id:"getstorageaddress-accountid-key-h256-at-blockhash-optionbytes"},"getStorage(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Bytes>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.contracts.getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"contracts_getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the value under a specified storage key in a contract")),(0,r.kt)("h3",{id:"instantiaterequest-instantiaterequest-at-blockhash-contractinstantiateresult"},"instantiate(request: ",(0,r.kt)("inlineCode",{parentName:"h3"},"InstantiateRequest"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ContractInstantiateResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.contracts.instantiate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"contracts_instantiate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Instantiate a new contract")),(0,r.kt)("h3",{id:"rentprojectionaddress-accountid-at-blockhash-optionblocknumber"},"rentProjection(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<BlockNumber>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.contracts.rentProjection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"contracts_rentProjection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the projected time a given contract will be able to sustain paying its rent")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"engine"},"engine"),(0,r.kt)("h3",{id:"createblockcreateempty-bool-finalize-bool-parenthash-blockhash-createdblock"},"createBlock(createEmpty: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),", finalize: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),", parentHash?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"CreatedBlock")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.engine.createBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"engine_createBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Instructs the manual-seal authorship task to create a new block")),(0,r.kt)("h3",{id:"finalizeblockhash-blockhash-justification-justification-bool"},"finalizeBlock(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),", justification?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Justification"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.engine.finalizeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"engine_finalizeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Instructs the manual-seal authorship task to finalize a block")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"eth"},"eth"),(0,r.kt)("h3",{id:"accounts-vech160"},"accounts(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<H160>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.accounts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_accounts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns accounts list.")),(0,r.kt)("h3",{id:"blocknumber-u256"},"blockNumber(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.blockNumber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_blockNumber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns balance of the given account.")),(0,r.kt)("h3",{id:"callrequest-ethcallrequest-number-blocknumber-bytes"},"call(request: ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthCallRequest"),", number?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Call contract, returning the output data.")),(0,r.kt)("h3",{id:"chainid-u64"},"chainId(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U64")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.chainId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_chainId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the chain ID used for transaction signing at the current best block. None is returned if not available.")),(0,r.kt)("h3",{id:"coinbase-h160"},"coinbase(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.coinbase")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_coinbase")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns block author.")),(0,r.kt)("h3",{id:"estimategasrequest-ethcallrequest-number-blocknumber-u256"},"estimateGas(request: ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthCallRequest"),", number?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.estimateGas")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_estimateGas")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Estimate gas needed for execution of given contract.")),(0,r.kt)("h3",{id:"gasprice-u256"},"gasPrice(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.gasPrice")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_gasPrice")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns current gas price.")),(0,r.kt)("h3",{id:"getbalanceaddress-h160-number-blocknumber-u256"},"getBalance(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),", number?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getBalance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getBalance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns balance of the given account.")),(0,r.kt)("h3",{id:"getblockbyhashhash-h256-full-bool-optionethrichblock"},"getBlockByHash(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),", full: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<EthRichBlock>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getBlockByHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getBlockByHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns block with given hash.")),(0,r.kt)("h3",{id:"getblockbynumberblock-blocknumber-full-bool-optionethrichblock"},"getBlockByNumber(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),", full: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<EthRichBlock>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getBlockByNumber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getBlockByNumber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns block with given number.")),(0,r.kt)("h3",{id:"getblocktransactioncountbyhashhash-h256-u256"},"getBlockTransactionCountByHash(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getBlockTransactionCountByHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getBlockTransactionCountByHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the number of transactions in a block with given hash.")),(0,r.kt)("h3",{id:"getblocktransactioncountbynumberblock-blocknumber-u256"},"getBlockTransactionCountByNumber(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getBlockTransactionCountByNumber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getBlockTransactionCountByNumber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the number of transactions in a block with given block number.")),(0,r.kt)("h3",{id:"getcodeaddress-h160-number-blocknumber-bytes"},"getCode(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),", number?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getCode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getCode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the code at given address at given time (block number).")),(0,r.kt)("h3",{id:"getfilterchangesindex-u256-ethfilterchanges"},"getFilterChanges(index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthFilterChanges")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getFilterChanges")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getFilterChanges")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns filter changes since last poll.")),(0,r.kt)("h3",{id:"getfilterlogsindex-u256-vecethlog"},"getFilterLogs(index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<EthLog>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getFilterLogs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getFilterLogs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns all logs matching given filter (in a range 'from' - 'to').")),(0,r.kt)("h3",{id:"getlogsfilter-ethfilter-vecethlog"},"getLogs(filter: ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthFilter"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<EthLog>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getLogs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getLogs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns logs matching given filter object.")),(0,r.kt)("h3",{id:"getproofaddress-h160-storagekeys-vech256-number-blocknumber-ethaccount"},"getProof(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),", storageKeys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<H256>"),", number: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthAccount")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns proof for account and storage.")),(0,r.kt)("h3",{id:"getstorageataddress-h160-index-u256-number-blocknumber-h256"},"getStorageAt(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),", index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),", number?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getStorageAt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getStorageAt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns content of the storage at given address.")),(0,r.kt)("h3",{id:"gettransactionbyblockhashandindexhash-h256-index-u256-ethtransaction"},"getTransactionByBlockHashAndIndex(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),", index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthTransaction")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getTransactionByBlockHashAndIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getTransactionByBlockHashAndIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns transaction at given block hash and index.")),(0,r.kt)("h3",{id:"gettransactionbyblocknumberandindexnumber-blocknumber-index-u256-ethtransaction"},"getTransactionByBlockNumberAndIndex(number: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),", index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthTransaction")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getTransactionByBlockNumberAndIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getTransactionByBlockNumberAndIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns transaction by given block number and index.")),(0,r.kt)("h3",{id:"gettransactionbyhashhash-h256-ethtransaction"},"getTransactionByHash(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthTransaction")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getTransactionByHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getTransactionByHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get transaction by its hash.")),(0,r.kt)("h3",{id:"gettransactioncounthash-h256-number-blocknumber-u256"},"getTransactionCount(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),", number?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getTransactionCount")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getTransactionCount")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the number of transactions sent from given address at given time (block number).")),(0,r.kt)("h3",{id:"gettransactionreceipthash-h256-ethreceipt"},"getTransactionReceipt(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthReceipt")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getTransactionReceipt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getTransactionReceipt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns transaction receipt by transaction hash.")),(0,r.kt)("h3",{id:"getunclebyblockhashandindexhash-h256-index-u256-ethrichblock"},"getUncleByBlockHashAndIndex(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),", index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthRichBlock")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getUncleByBlockHashAndIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getUncleByBlockHashAndIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns an uncles at given block and index.")),(0,r.kt)("h3",{id:"getunclebyblocknumberandindexnumber-blocknumber-index-u256-ethrichblock"},"getUncleByBlockNumberAndIndex(number: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),", index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthRichBlock")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getUncleByBlockNumberAndIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getUncleByBlockNumberAndIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns an uncles at given block and index.")),(0,r.kt)("h3",{id:"getunclecountbyblockhashhash-h256-u256"},"getUncleCountByBlockHash(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getUncleCountByBlockHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getUncleCountByBlockHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the number of uncles in a block with given hash.")),(0,r.kt)("h3",{id:"getunclecountbyblocknumbernumber-blocknumber-u256"},"getUncleCountByBlockNumber(number: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getUncleCountByBlockNumber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getUncleCountByBlockNumber")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the number of uncles in a block with given block number.")),(0,r.kt)("h3",{id:"getwork-ethwork"},"getWork(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthWork")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.getWork")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_getWork")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the hash of the current block, the seedHash, and the boundary condition to be met.")),(0,r.kt)("h3",{id:"hashrate-u256"},"hashrate(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.hashrate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_hashrate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the number of hashes per second that the node is mining with.")),(0,r.kt)("h3",{id:"mining-bool"},"mining(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.mining")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_mining")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns true if client is actively mining new blocks.")),(0,r.kt)("h3",{id:"newblockfilter-u256"},"newBlockFilter(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.newBlockFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_newBlockFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns id of new block filter.")),(0,r.kt)("h3",{id:"newfilterfilter-ethfilter-u256"},"newFilter(filter: ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthFilter"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.newFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_newFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns id of new filter.")),(0,r.kt)("h3",{id:"newpendingtransactionfilter-u256"},"newPendingTransactionFilter(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.newPendingTransactionFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_newPendingTransactionFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns id of new block filter.")),(0,r.kt)("h3",{id:"protocolversion-u64"},"protocolVersion(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u64")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.protocolVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_protocolVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns protocol version encoded as a string (quotes are necessary).")),(0,r.kt)("h3",{id:"sendrawtransactionbytes-bytes-h256"},"sendRawTransaction(bytes: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.sendRawTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_sendRawTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Sends signed transaction, returning its hash.")),(0,r.kt)("h3",{id:"sendtransactiontx-ethtransactionrequest-h256"},"sendTransaction(tx: ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthTransactionRequest"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.sendTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_sendTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Sends transaction; will block waiting for signer to return the transaction hash")),(0,r.kt)("h3",{id:"submithashrateindex-u256-hash-h256-bool"},"submitHashrate(index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),", hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.submitHashrate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_submitHashrate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Used for submitting mining hashrate.")),(0,r.kt)("h3",{id:"submitworknonce-h64-headerhash-h256-mixdigest-h256-bool"},"submitWork(nonce: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H64"),", headerHash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),", mixDigest: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.submitWork")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_submitWork")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Used for submitting a proof-of-work solution.")),(0,r.kt)("h3",{id:"subscribekind-ethsubkind-params-ethsubparams-null"},"subscribe(kind: ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthSubKind"),", params?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthSubParams"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.subscribe")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_subscribe")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Subscribe to Eth subscription.")),(0,r.kt)("h3",{id:"syncing-ethsyncstatus"},"syncing(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthSyncStatus")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.syncing")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_syncing")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns an object with data about the sync status or false.")),(0,r.kt)("h3",{id:"uninstallfilterindex-u256-bool"},"uninstallFilter(index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.eth.uninstallFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_uninstallFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Uninstalls filter.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"ethnet"},"eth/net"),(0,r.kt)("h3",{id:"listening-bool"},"listening(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.net.listening")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"net_listening")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns true if client is actively listening for network connections. Otherwise false.")),(0,r.kt)("h3",{id:"peercount-string"},"peerCount(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"String")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.net.peerCount")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"net_peerCount")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns number of peers connected to node.")),(0,r.kt)("h3",{id:"version-string"},"version(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"String")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.net.version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"net_version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns protocol version.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"ethweb3"},"eth/web3"),(0,r.kt)("h3",{id:"clientversion-string"},"clientVersion(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"String")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.web3.clientVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"web3_clientVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns current client version.")),(0,r.kt)("h3",{id:"sha3data-bytes-h256"},"sha3(data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.web3.sha3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"web3_sha3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns sha3 of the given data")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"grandpa"},"grandpa"),(0,r.kt)("h3",{id:"provefinalitybegin-blockhash-end-blockhash-authoritiessetid-u64-optionencodedfinalityproofs"},"proveFinality(begin: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),", end: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),", authoritiesSetId?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u64"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<EncodedFinalityProofs>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.grandpa.proveFinality")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"grandpa_proveFinality")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Prove finality for the range (begin; end] hash.")),(0,r.kt)("h3",{id:"roundstate-reportedroundstates"},"roundState(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ReportedRoundStates")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.grandpa.roundState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"grandpa_roundState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the state of the current best round state as well as the ongoing background rounds")),(0,r.kt)("h3",{id:"subscribejustifications-justificationnotification"},"subscribeJustifications(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"JustificationNotification")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.grandpa.subscribeJustifications")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"grandpa_subscribeJustifications")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Subscribes to grandpa justifications")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"mmr"},"mmr"),(0,r.kt)("h3",{id:"generateproofleafindex-u64-at-blockhash-mmrleafproof"},"generateProof(leafIndex: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u64"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrLeafProof")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.mmr.generateProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"mmr_generateProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate MMR proof for given leaf index.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"offchain"},"offchain"),(0,r.kt)("h3",{id:"localstoragegetkind-storagekind-key-bytes-optionbytes"},"localStorageGet(kind: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKind"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Bytes>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.offchain.localStorageGet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"offchain_localStorageGet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get offchain local storage under given key and prefix")),(0,r.kt)("h3",{id:"localstoragesetkind-storagekind-key-bytes-value-bytes-null"},"localStorageSet(kind: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKind"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", value: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.offchain.localStorageSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"offchain_localStorageSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Set offchain local storage under given key and prefix")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"payment"},"payment"),(0,r.kt)("h3",{id:"queryfeedetailsextrinsic-bytes-at-blockhash-feedetails"},"queryFeeDetails(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"FeeDetails")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.payment.queryFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"payment_queryFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query the detailed fee of a given encoded extrinsic")),(0,r.kt)("h3",{id:"queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfo"},"queryInfo(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeDispatchInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.payment.queryInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"payment_queryInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the fee information for an encoded extrinsic")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"rpc"},"rpc"),(0,r.kt)("h3",{id:"methods-rpcmethods"},"methods(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RpcMethods")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.rpc.methods")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"rpc_methods")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the list of RPC methods that are exposed by the node")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"state"},"state"),(0,r.kt)("h3",{id:"callmethod-text-data-bytes-at-blockhash-bytes"},"call(method: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),", data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Perform a call to a builtin on the chain")),(0,r.kt)("h3",{id:"getchildkeyschildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-vecstoragekey"},"getChildKeys(childStorageKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", childDefinition: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", childType: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getChildKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getChildKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the keys with prefix of a specific child storage")),(0,r.kt)("h3",{id:"getchildstoragechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-storagedata"},"getChildStorage(childStorageKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", childDefinition: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", childType: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageData")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getChildStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getChildStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the child storage for a key")),(0,r.kt)("h3",{id:"getchildstoragehashchildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-hash"},"getChildStorageHash(childStorageKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", childDefinition: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", childType: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getChildStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getChildStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the child storage hash")),(0,r.kt)("h3",{id:"getchildstoragesizechildstoragekey-storagekey-childdefinition-storagekey-childtype-u32-key-storagekey-at-blockhash-u64"},"getChildStorageSize(childStorageKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", childDefinition: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", childType: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u64")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getChildStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getChildStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the child storage size")),(0,r.kt)("h3",{id:"getkeyskey-storagekey-at-blockhash-vecstoragekey"},"getKeys(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the keys with a certain prefix")),(0,r.kt)("h3",{id:"getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey"},"getKeysPaged(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", count: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", startKey?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getKeysPaged")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getKeysPaged")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the keys with prefix with pagination support.")),(0,r.kt)("h3",{id:"getmetadataat-blockhash-metadata"},"getMetadata(at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Metadata")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the runtime metadata")),(0,r.kt)("h3",{id:"getpairsprefix-storagekey-at-blockhash-veckeyvalue"},"getPairs(prefix: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<KeyValue>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getPairs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getPairs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)")),(0,r.kt)("h3",{id:"getreadproofkeys-vecstoragekey-at-blockhash-readproof"},"getReadProof(keys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ReadProof")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getReadProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getReadProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns proof of storage entries at a specific block state")),(0,r.kt)("h3",{id:"getruntimeversionat-blockhash-runtimeversion"},"getRuntimeVersion(at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeVersion")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getRuntimeVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getRuntimeVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the runtime version")),(0,r.kt)("h3",{id:"getstoragekey-storagekey-at-blockhash-storagedata"},"getStorage(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageData")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the storage for a key")),(0,r.kt)("h3",{id:"getstoragehashkey-storagekey-at-blockhash-hash"},"getStorageHash(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the storage hash")),(0,r.kt)("h3",{id:"getstoragesizekey-storagekey-at-blockhash-u64"},"getStorageSize(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u64")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the storage size")),(0,r.kt)("h3",{id:"querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset"},"queryStorage(keys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),", fromBlock: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),", toBlock?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageChangeSet>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.queryStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_queryStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query historical storage entries (by key) starting from a start block")),(0,r.kt)("h3",{id:"querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset"},"queryStorageAt(keys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageChangeSet>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.queryStorageAt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_queryStorageAt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query storage entries (by key) starting at block hash given as the second parameter")),(0,r.kt)("h3",{id:"subscriberuntimeversion-runtimeversion"},"subscribeRuntimeVersion(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeVersion")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.subscribeRuntimeVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_subscribeRuntimeVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the runtime version via subscription")),(0,r.kt)("h3",{id:"subscribestoragekeys-vecstoragekey-storagechangeset"},"subscribeStorage(keys?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageChangeSet")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.subscribeStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_subscribeStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Subscribes to storage changes for the provided keys")),(0,r.kt)("h3",{id:"traceblockblock-hash-targets-optiontext-storagekeys-optiontext-traceblockresponse"},"traceBlock(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),", targets: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Text>"),", storageKeys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Text>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"TraceBlockResponse")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.traceBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_traceBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Provides a way to trace the re-execution of a single block")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"syncstate"},"syncstate"),(0,r.kt)("h3",{id:"gensyncspecraw-bool-json"},"genSyncSpec(raw: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Json")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.syncstate.genSyncSpec")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"sync_state_genSyncSpec")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the json-serialized chainspec running the node, with a sync state.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"system"},"system"),(0,r.kt)("h3",{id:"accountnextindexaccountid-accountid-index"},"accountNextIndex(accountId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Index")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.accountNextIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_accountNextIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the next accountIndex as available on the node")),(0,r.kt)("h3",{id:"addlogfilterdirectives-text-null"},"addLogFilter(directives: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.addLogFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_addLogFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Adds the supplied directives to the current log filter")),(0,r.kt)("h3",{id:"addreservedpeerpeer-text-text"},"addReservedPeer(peer: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.addReservedPeer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_addReservedPeer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Adds a reserved peer")),(0,r.kt)("h3",{id:"chain-text"},"chain(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.chain")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_chain")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the chain")),(0,r.kt)("h3",{id:"chaintype-chaintype"},"chainType(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ChainType")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.chainType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_chainType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the chain type")),(0,r.kt)("h3",{id:"dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult"},"dryRun(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ApplyExtrinsicResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.dryRun")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_dryRun")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Dry run an extrinsic at a given block")),(0,r.kt)("h3",{id:"health-health"},"health(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Health")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.health")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_health")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return health status of the node")),(0,r.kt)("h3",{id:"locallistenaddresses-vectext"},"localListenAddresses(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Text>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.localListenAddresses")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_localListenAddresses")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example")),(0,r.kt)("h3",{id:"localpeerid-text"},"localPeerId(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.localPeerId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_localPeerId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the base58-encoded PeerId of the node")),(0,r.kt)("h3",{id:"name-text"},"name(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.name")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_name")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the node name")),(0,r.kt)("h3",{id:"networkstate-networkstate"},"networkState(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"NetworkState")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.networkState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_networkState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns current state of the network")),(0,r.kt)("h3",{id:"noderoles-vecnoderole"},"nodeRoles(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<NodeRole>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.nodeRoles")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_nodeRoles")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the roles the node is running as")),(0,r.kt)("h3",{id:"peers-vecpeerinfo"},"peers(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<PeerInfo>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.peers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_peers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the currently connected peers")),(0,r.kt)("h3",{id:"properties-chainproperties"},"properties(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ChainProperties")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.properties")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_properties")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get a custom set of properties as a JSON object, defined in the chain spec")),(0,r.kt)("h3",{id:"removereservedpeerpeerid-text-text"},"removeReservedPeer(peerId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.removeReservedPeer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_removeReservedPeer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Remove a reserved peer")),(0,r.kt)("h3",{id:"reservedpeers-vectext"},"reservedPeers(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Text>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.reservedPeers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_reservedPeers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the list of reserved peers")),(0,r.kt)("h3",{id:"resetlogfilter-null"},"resetLogFilter(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.resetLogFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_resetLogFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Resets the log filter to Substrate defaults")),(0,r.kt)("h3",{id:"syncstate-syncstate"},"syncState(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SyncState")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.syncState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_syncState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the state of the syncing of the node")),(0,r.kt)("h3",{id:"version-text"},"version(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the version of the node")))}d.isMDXComponent=!0},3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return d},kt:function(){return m}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=i,h=p["".concat(s,".").concat(m)]||p[m]||k[m]||r;return a?n.createElement(h,l(l({ref:t},d),{},{components:a})):n.createElement(h,l({ref:t},d))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);