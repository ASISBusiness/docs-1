"use strict";(self.webpackChunkpolkadot_js=self.webpackChunkpolkadot_js||[]).push([[6268],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),h=a,f=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4708:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={title:"Basics"},s=void 0,l={unversionedId:"api-contract/start/basics",id:"api-contract/start/basics",isDocsHomePage:!1,title:"Basics",description:"The @polkadot/api-contract comes with 3 general helpers and has *Rx-based versions for the users of the ApiRx version of the API. However here we will focus only on the ApiPromise-based version of the helpers, in much the same way as the API documentation. The 3 main interfaces provided are -",source:"@site/docs/api-contract/start/basics.md",sourceDirName:"api-contract/start",slug:"/api-contract/start/basics",permalink:"/docs/api-contract/start/basics",editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/api-contract/start/basics.md",tags:[],version:"current",frontMatter:{title:"Basics"},sidebar:"reference",previous:{title:"Installation",permalink:"/docs/api-contract/start/install"},next:{title:"Code",permalink:"/docs/api-contract/start/code"}},p=[{value:"Deploying code",id:"deploying-code",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@polkadot/api-contract")," comes with 3 general helpers and has ",(0,o.kt)("inlineCode",{parentName:"p"},"*Rx"),"-based versions for the users of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ApiRx")," version of the API. However here we will focus only on the ",(0,o.kt)("inlineCode",{parentName:"p"},"ApiPromise"),"-based version of the helpers, in much the same way as the ",(0,o.kt)("a",{parentName:"p",href:"/docs/api"},"API documentation"),". The 3 main interfaces provided are -"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api-contract/start/code"},"CodePromise")," - This allows use to manage actual WASM code and deploy it,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api-contract/start/blueprint"},"BlueprintPromise")," - This allows us to manage on-chain code hashes and use this as a blueprint for the creation of contracts"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/api-contract/start/contract.read"},"ContractPromise")," - This allows us to manage on-chain contracts, making read calls and executing transactions on contracts"),(0,o.kt)("li",{parentName:"ul"},"Abi - This is a generic registry that contains all the types and all the messages for a given ABI")),(0,o.kt)("p",null,"In terms of use this would mean that ",(0,o.kt)("inlineCode",{parentName:"p"},"Code")," will create a ",(0,o.kt)("inlineCode",{parentName:"p"},"Blueprint")," which in turn, would create ",(0,o.kt)("inlineCode",{parentName:"p"},"Contract"),". In cases where you already have a on-chain ",(0,o.kt)("inlineCode",{parentName:"p"},"codeHash")," or an on-chain contract, the relevant blueprint or contract instance can be created without helpers by direct instantiation."),(0,o.kt)("h2",{id:"deploying-code"},"Deploying code"),(0,o.kt)("p",null,"Not that we have a good overview of what is available and the use of each interface, ",(0,o.kt)("a",{parentName:"p",href:"/docs/api-contract/start/code"},"let's deploy a WASM contract and start using it"),"."))}d.isMDXComponent=!0}}]);